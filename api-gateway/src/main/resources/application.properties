server.port=8080
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway
## route config - automatic mapping of gateway routes
#spring.cloud.gateway.discovery.locator.enabled=true
## allow lowercase for service name USERS-WS in urls for example http://localhost:8080/users-ws/users/status/check
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Route config - Manually configure API Routes
# Implemented as Java Configuration using RouteLocator Bean
spring.cloud.gateway.routes[0].id=users-status-check
spring.cloud.gateway.routes[0].uri=lb://USERS-WS
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/status/check
spring.cloud.gateway.routes[0].predicates[1]=Method=GET, POST
# Route incoming request on gateway to above path only if it has an Authorization header with Bearer and token
spring.cloud.gateway.routes[0].predicates[2]=Header=Authorization, Bearer (.*)
spring.cloud.gateway.routes[0].filters[0]=RemoveRequestHeader=Cookie
#spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/users/status/check, /users/status/check
# Above paths can be written using regular expressions, convert the incoming url to the outgoing url to the microservice
spring.cloud.gateway.routes[0].filters[1]=RewritePath=/users-ws/(?<segment>.*), /$\{segment}

spring.cloud.gateway.routes[1].id=accounts-status-check
spring.cloud.gateway.routes[1].uri=lb://accounts-ws
spring.cloud.gateway.routes[1].predicates[0]=Path=/accounts/**
spring.cloud.gateway.routes[1].predicates[1]=Method=GET
spring.cloud.gateway.routes[1].filters[0]=RemoveRequestHeader=Cookie

# Automatic and manual routing will allow us to send to both /users-ws/users/status/check and /users/status/check